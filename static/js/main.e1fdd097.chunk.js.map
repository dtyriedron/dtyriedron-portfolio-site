{"version":3,"sources":["assests/images/DylanGH.png","assests/images/DylanInsta.png","assests/images/DylanStrava.png","components/Footer.js","components/Hero.js","components/CardInfo.js","components/Card.js","components/Carousel.js","pages/HomePage.js","components/Content.js","pages/AboutPage.js","pages/ContactPage.js","pages/PortfolioMainPage.js","components/Project.js","pages/PortfolioPage.js","pages/AchievementsPage.js","pages/HobbiesPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","Container","fluid","Row","Col","md","sm","Hero","props","title","subTitle","text","CardInfo","style","useSpring","opacity","from","div","href","link","target","rel","Card","onClick","e","click","item","src","imgSrc","alt","selected","Carousel","handleCardClick","id","card","items","state","forEach","setState","makeitems","map","key","github","instagram","strava","this","React","Component","HomePage","Content","children","AboutPage","ContactPage","handleChange","value","type","checked","name","handleSubmit","preventDefault","disabled","Axios","post","then","res","data","success","emailSent","catch","err","email","message","Form","onSubmit","Group","Label","htmlFor","Control","onChange","as","rows","Button","variant","PortfolioMainPage","useState","setName","repos","setRepos","useEffect","fetch","json","setCardData","array","arr","console","log","padding","Object","entries","i","pos","repo","border","width","margin","Header","Body","Text","description","marginLeft","document","location","handleClick","Project","setDescription","language","setLanguage","setData","languages","setLanguages","object","totalBytes","x","parseInt","percent","colors","position","center","bottom","lan","bytes","ProgressBar","Math","floor","random","length","label","toFixed","now","PortfolioPage","param","URL","window","searchParams","get","AchievementsPage","HobbiesPage","App","headerLinks","path","home","about","portfolioMainPage","achievements","hobbies","contact","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","to","render","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.e1fdd097.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DylanGH.8f6ed301.png\";","module.exports = __webpack_public_path__ + \"static/media/DylanInsta.b61c8841.png\";","module.exports = __webpack_public_path__ + \"static/media/DylanStrava.0ec24b30.png\";","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nfunction Footer(){\n    return(    \n        <footer className=\"mt-5\">\n            <Container fluid={true}>\n                <Row className=\"border-top justify-content-between p-3\">\n                    <Col className=\"p-0\" md={3} sm={12}>\n                        Dylan Tyrie-Dron\n                    </Col>\n                    <Col className=\"p-0 d-flex justify-content-end\" md={2.5}>\n                        This site was made by Dylan Tyrie-Dron.\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport { Container, Row } from 'react-bootstrap';\n\n\nfunction Hero(props){\n    return(\n        <Container fluid={true}>\n            <Row className=\"justify-content-center\">\n                { props.title && <h3 className=\"display-4 font-weight-bolder\">{props.title}</h3> }\n            </Row>\n            <Row className=\"justify-content-center\">\n                { props.subTitle && <h4 className=\"display-6 font-weight-light\">{props.subTitle}</h4> }\n            </Row>\n            <Row className=\"justify-content-center\">\n                { props.text && <h5 className=\"lead font-weight-light\">{props.text}</h5> }\n            </Row>\n        </Container>\n    );\n}\n\nexport default Hero;","import React from 'react';\nimport { useSpring, animated } from 'react-spring';\n\nfunction CardInfo(props){\n\n    const style = useSpring({opacity: 1, from: {opacity:0}});\n\n    return(\n        <animated.div className=\"dtd-card-info\" style={style}>\n            <p className=\"dtd-card-title\">{props.title}</p>\n            <p className=\"dtd-card-sub-title\">{props.subTitle}</p>\n            <a href={props.link} target=\"_blank\" rel=\"noopener noreferrer\">View</a>\n        </animated.div>\n    );\n}\n\nexport default CardInfo;","    import React from 'react';\n\nimport CardInfo from '../components/CardInfo';\n\nfunction Card(props){\n    return(\n        <div className=\"d-inline-block dtd-card hover\" onClick={(e) => props.click(props.item)} >\n            <img className=\"dtd-card-image\" src={props.item.imgSrc} alt={props.item.imgSrc}/>\n            { props.item.selected && <CardInfo title={props.item.title} subTitle={props.item.subTitle} link={props.item.link}/> }\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport { Container, Row} from 'react-bootstrap';\n\nimport Card from '../components/Card';\n\nimport github from '../assests/images/DylanGH.png';\nimport instagram from '../assests/images/DylanInsta.png';\nimport strava from '../assests/images/DylanStrava.png';\n\n\nclass Carousel extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            items:[\n                {\n                    id:0,\n                    title: 'GitHub',\n                    subTitle: 'Software storage and sharing',\n                    imgSrc: github,\n                    link: 'https://github.com/dtyriedron',\n                    selected: false\n                },\n                {\n                    id:1,\n                    title: 'Instagram',\n                    subTitle: 'Photo and video sharing',\n                    imgSrc: instagram,\n                    link: 'https://www.instagram.com/doseofdylz/',\n                    selected: false\n                },\n                {\n                    id:2,\n                    title: 'Strava',\n                    subTitle: 'Track exercise and share with others',\n                    imgSrc: strava,\n                    link: 'https://www.strava.com/athletes/8795009',\n                    selected: false\n                },\n            ]\n        }\n    }\n\n    handleCardClick = (id, card) => {\n        let items = [...this.state.items];\n\n        items[id].selected = items[id].selected ? false : true;\n\n        items.forEach(item => {\n            if(item.id !== id){\n                item.selected = false;\n            }\n        });\n\n        this.setState({\n            items\n        });\n    }\n\n    makeitems = (items) => {\n        return items.map(item => {\n            return <Card item={item} click={(e => this.handleCardClick(item.id, e))} key={item.id} />\n        })\n    }\n\n    render(){\n        return(\n            <Container fluid={true} >\n                <Row className=\"justify-content-center\">\n                    {this.makeitems(this.state.items)}\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Carousel;","import React from 'react';\n\nimport Hero from '../components/Hero';\nimport Carousel from '../components/Carousel';\n\nfunction HomePage(props){\n    return(\n        <div>\n            <Hero title={props.title} subTitle={props.subTitle} text={props.text}/>\n            <Carousel />\n        </div>\n    );\n}\nexport default HomePage;","import React from 'react';\nimport { Container, Row, Col} from 'react-bootstrap';\n\nfunction Content(props){\n    return(\n        <Container fluid={true}>\n            <Row className=\"justify-content-center\">\n                <Col md={8}>\n                    {props.children}\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Content;","import React from 'react';\n\nimport Hero from '../components/Hero';\nimport Content from '../components/Content';\n\nfunction AboutPage(props){\n    return(\n        <div>\n            <Hero title={props.title}/>\n\n            <Content>\n                <p>Hello, my name is Dylan. I am a full stack software engineer with experience in Java, Android, C++, C#, Arduino, HTML, ReactJS, Ada, C, CSS, JavaScript, Python and Haskell.</p>\n            </Content>\n        </div>\n    );\n}\nexport default AboutPage;","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nimport Hero from '../components/Hero';\nimport Content from '../components/Content';\nimport Axios from 'axios';\n\n\nclass ContactPage extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            email: '',\n            message: '',\n            disabled: false,\n            emailSent: null,\n        }\n    }\n\n    handleChange = (e) => {\n\n        const target = e.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name] : value\n        });\n\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            disabled: true\n        });\n\n        Axios.post('http://localhost:3030/api/email', this.state)\n            .then(res => {\n                if(res.data.success){\n                    this.setState({\n                        disabled: false,\n                        emailSent: true\n                    }); \n                } else{\n                    this.setState({\n                        disabled: false,\n                        emailSent: false\n                    }); \n                }\n            })\n            .catch(err => {\n                this.setState({\n                    disabled: false,\n                    emailSent: false\n                })\n            });\n    }\n\n    render(){\n        return(\n            <div>\n                <Hero title={this.props.title} />\n\n                <Content>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group>\n                            <Form.Label htmlFor=\"full-name\">Full Name</Form.Label>\n                            <Form.Control id=\"full-name\" name= \"name\" type=\"text\" value={this.state.name} onChange={this.handleChange}></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label htmlFor=\"email\">Email</Form.Label>\n                            <Form.Control id=\"email\" name= \"email\" type=\"email\" value={this.state.email} onChange={this.handleChange}></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label htmlFor=\"message\">Message</Form.Label>\n                            <Form.Control id=\"message\" name= \"message\" as=\"textarea\" rows=\"3\" value={this.state.message} onChange={this.handleChange}></Form.Control>\n                        </Form.Group>\n\n                        <Button className=\"d-inline-block\" variant=\"primary\" type=\"sumbit\" disabled={this.state.disabled}>\n                            Send\n                        </Button>\n\n\n                        {this.state.emailSent === true && <p className=\"d-inline success-msg\">Email sent</p>}\n                        {this.state.emailSent === false && <p className=\"d-inline err-msg\">Email not sent</p>}\n                    </Form>\n                </Content>\n\n            </div>\n\n            \n        );\n    }\n}\nexport default ContactPage;","import React, { useState, useEffect} from 'react';\nimport Hero from '../components/Hero';\nimport { Row, Card, Button, Container} from 'react-bootstrap';\n\nfunction PortfolioMainPage(props){\n    const [name, setName] = useState('');\n    const [repos, setRepos] = useState('');\n\n    useEffect(() => {\n        fetch('https://api.github.com/users/dtyriedron/repos')\n        .then(res => res.json())\n        .then( data => {\n            setCardData(data);     \n        });\n        \n\n    }, []);\n\n    const setCardData = (\n        array,\n    ) => {\n        setName(props.title);\n        var arr = array;\n        console.log(arr);\n        setRepos(arr);\n    };\n\n    function handleClick(pos) {     \n      // alert(pos);   \n      console.log(pos);\n      document.location = `/PortfolioPage/?pos=${pos}`;\n    }\n\n    \n\n    return(\n        <div>\n          <Hero title={props.title}/>\n                    {/* { props.title && <h1 className=\"display-1 font-weight-bolder\">{props.title}</h1> }                 */}\n                    <Container fluid={true} style={{padding: '1rem'}}>\n                            <Row md={12} className=\"justify-content-center\">  \n                            {\n                                Object.entries(repos).map(([pos, repo], i) => {\n                                    return (         \n                                        // <Col> \n                                        <Card border=\"primary\" key={i} style={{width: '15rem', margin: '1rem'}}>\n                                            <Card.Header key={i}>{repo.name}\n                                            </Card.Header>\n                                            <Card.Body key={i}>                                            \n                                                <Card.Text key={i}>\n                                                    {repo.description}\n                                                </Card.Text>                                            \n                                            </Card.Body>\n                                            <Card.Footer>\n                                                <Button key={i} style={{marginLeft:'20%', width:'75'}} onClick={()=> handleClick(pos)} variant=\"primary\">Project Page\n                                                </Button>\n                                                {/* <Route exact path=\"/PortfolioPage\">\n                                                  {<Project pos={3}/>}\n                                                </Route> */}\n                                            </Card.Footer>\n                                        </Card>\n                                        // </Col>\n                                    )\n                                })\n                            }\n\n                            </Row>\n                        {/* </Parallax> */}\n                    </Container>\n                {/* </Content> */}\n            {/* </Hero> */}\n        </div>\n    );\n    \n}\n\nexport default PortfolioMainPage;\n\n\n// import { render } from 'react-dom'\n// import React, { useState } from 'react'\n// import { useSprings, animated, interpolate } from 'react-spring'\n// import { useGesture } from 'react-use-gesture'\n// import './styles.css'\n\n// const cards = [\n//   'https://upload.wikimedia.org/wikipedia/en/f/f5/RWS_Tarot_08_Strength.jpg',\n//   'https://upload.wikimedia.org/wikipedia/en/5/53/RWS_Tarot_16_Tower.jpg',\n//   'https://upload.wikimedia.org/wikipedia/en/9/9b/RWS_Tarot_07_Chariot.jpg',\n//   'https://upload.wikimedia.org/wikipedia/en/d/db/RWS_Tarot_06_Lovers.jpg',\n//   'https://upload.wikimedia.org/wikipedia/en/thumb/8/88/RWS_Tarot_02_High_Priestess.jpg/690px-RWS_Tarot_02_High_Priestess.jpg',\n//   'https://upload.wikimedia.org/wikipedia/en/d/de/RWS_Tarot_01_Magician.jpg'\n// ]\n\n// // These two are just helpers, they curate spring data, values that are later being interpolated into css\n// const to = i => ({ x: 0, y: i * -4, scale: 1, rot: -10 + Math.random() * 20, delay: i * 100 })\n// const from = i => ({ x: 0, rot: 0, scale: 1.5, y: -1000 })\n// // This is being used down there in the view, it interpolates rotation and scale into a css transform\n// const trans = (r, s) => `perspective(1500px) rotateX(30deg) rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`\n\n// function Deck() {\n//   const [gone] = useState(() => new Set()) // The set flags all the cards that are flicked out\n//   const [props, set] = useSprings(cards.length, i => ({ ...to(i), from: from(i) })) // Create a bunch of springs using the helpers above\n//   // Create a gesture, we're interested in down-state, delta (current-pos - click-pos), direction and velocity\n//   const bind = useGesture(({ args: [index], down, delta: [xDelta], distance, direction: [xDir], velocity }) => {\n//     const trigger = velocity > 0.2 // If you flick hard enough it should trigger the card to fly out\n//     const dir = xDir < 0 ? -1 : 1 // Direction should either point left or right\n//     if (!down && trigger) gone.add(index) // If button/finger's up and trigger velocity is reached, we flag the card ready to fly out\n//     set(i => {\n//       if (index !== i) return // We're only interested in changing spring-data for the current spring\n//       const isGone = gone.has(index)\n//       const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0 // When a card is gone it flys out left or right, otherwise goes back to zero\n//       const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0) // How much the card tilts, flicking it harder makes it rotate faster\n//       const scale = down ? 1.1 : 1 // Active cards lift up a bit\n//       return { x, rot, scale, delay: undefined, config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 } }\n//     })\n//     if (!down && gone.size === cards.length) setTimeout(() => gone.clear() || set(i => to(i)), 600)\n//   })\n//   // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\n//   return props.map(({ x, y, rot, scale }, i) => (\n//     <animated.div key={i} style={{ transform: interpolate([x, y], (x, y) => `translate3d(${x}px,${y}px,0)`) }}>\n//       {/* This is the card itself, we're binding our gesture to it (and inject its index so we know which is which) */}\n//       <animated.div {...bind(i)} style={{ transform: interpolate([rot, scale], trans), backgroundImage: `url(${cards[i]})` }} />\n//     </animated.div>\n//   ))\n// }\n\n// render(<Deck />, document.getElementById('root'))","import React, { useState, useEffect } from 'react';\nimport Content from '../components/Content';\nimport Hero from '../components/Hero';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport { Col , Button, Row} from 'react-bootstrap';\n\n\nfunction Project(props){\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [language, setLanguage] = useState('');\n\n    useEffect(() => {\n        fetch('https://api.github.com/users/dtyriedron/repos')\n        .then(res => res.json())\n        .then(data => {\n            setData(data);     \n        });\n\n    }, []);\n\n    const setData = (\n        array,\n    ) => {\n        console.log(array)\n        setName(array[props.pos].name);\n        setDescription(array[props.pos].description);\n        fetch(`https://api.github.com/repos/dtyriedron/${array[props.pos].name}/languages`)\n        .then(res => res.json())\n        .then(languages => {\n            setLanguages(languages);     \n        });\n    };\n\n    const setLanguages = (\n        object,\n    ) => {\n        console.log(object)\n        var obj = object;\n        setLanguage(obj);\n    };\n\n    var totalBytes =0;\n    for(var x in language){\n        totalBytes+=parseInt(language[x])\n    }\n    console.log(totalBytes);\n    var percent=0;\n\n    var colors = [\"success\", \"info\", \"warning\", \"danger\"];\n\n    return(\n        <div>\n            <Hero title={name}/>\n            <Content>\n            <Row>\n                <Col md={10}>\n                    <p>\n                        {description} \n                    </p>\n                </Col>\n                <Col md={2}>\n                    <Button style={{position: 'absolute', center:0, bottom:0}} href=\"#\" variant=\"success\">Github</Button>{' '}\n                </Col>\n            </Row>\n                \n            </Content>\n            <Content>\n                <div style={{border: \".2rem solid #ececec\", padding: \"1rem\"}}>\n                    <p>\n                        Code coverage:\n                    </p>\n                    <style type=\"text/css\">\n                        {`\n                        .progress-bar {\n                        color: black;\n                        }\n                        `}\n                    </style>\n                    \n                    {\n                        \n                        Object.entries(language).map(([lan, bytes], i) => {\n                            console.log(bytes);\n                            percent = (parseInt(bytes)/totalBytes)*100;\n                                return (                                                            \n                                    <ProgressBar key={i} variant={colors[Math.floor(Math.random() * colors.length)]} label={lan +` ${percent.toFixed(2)}%`} now={percent}/>                                    \n                                )\n                        })\n                    }\n                </div>\n\n            </Content>\n        </div>\n    );\n}\n\nexport default Project;","import Project from '../components/Project';\nimport React from 'react';\n\nfunction PortfolioPage(){\n    var url = new URL(window.location.href);\n\tvar param = url.searchParams.get(\"pos\");\n    return(\n        <Project pos={param}/>\n    );\n}\nexport default PortfolioPage;","import React from 'react';\n\nfunction AchievementsPage(props){\n    return(\n        <p>Achievements Works!</p>\n    );\n}\nexport default AchievementsPage;","import React from 'react';\n\nfunction HobbiesPage(props){\n    return(\n        <p>Hobbies Works!</p>\n    );\n}\nexport default HobbiesPage;","import React from 'react';\nimport {Router, Route, Link} from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport './App.css';\n\nimport Footer from './components/Footer';\nimport Home from './pages/HomePage';\nimport About from './pages/AboutPage';\nimport Contact from './pages/ContactPage';\nimport PortfolioMain from './pages/PortfolioMainPage';\nimport Portfolio from './pages/PortfolioPage';\nimport Achievements from './pages/AchievementsPage';\nimport Hobbies from './pages/HobbiesPage';\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      title: 'Dylan Tyrie-Dron',\n      headerLinks: [\n        {title: 'Home', path:'/'},\n        {title: 'About', path:'/about'},\n        {title: 'Contact', path:'/contact'}\n      ],\n      home: {\n        title: 'Sesh.',\n        subTitle: 'Projects that make a difference',\n      },\n      about: {\n        title: 'About me',\n      },\n      portfolioMainPage: {\n        title: 'My projects!',\n      },\n      achievements:{\n        title: 'My achievements!',\n      },\n      hobbies:{\n        title: 'My interests!',\n      },\n      contact: {\n        title: 'Get in touch with me',\n      },\n      \n      \n    }\n  }\n  render(){\n    return (\n      <Router >\n        <Container className=\"p-0\" fluid={true}>\n\n          <Navbar className=\"border-bottom\" bg=\"transparent\" expand=\"lg\">\n            <Navbar.Brand>Dylan Tyrie-Dron</Navbar.Brand>\n\n            <Navbar.Toggle className=\"border-0\" aria-controls=\"navbar-toggle\" />\n            <Navbar.Collapse id=\"navbar-toggle\">\n              <Nav className=\"ml-auto\">\n                <Link className=\"nav-link\" to=\"/\">Home</Link>\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\n                <Link className=\"nav-link\" to=\"/PortfolioMainPage\">Portfolio</Link>\n                <Link className=\"nav-link\" to=\"/achievements\">Achievements</Link>\n                <Link className=\"nav-link\" to=\"/hobbies\">Hobbies</Link>\n                <Link className=\"nav-link\" to=\"/contact\">Contact</Link>\n\n              </Nav>\n            </Navbar.Collapse>\n            \n\n          </Navbar>\n\n          <Route path=\"/\" render={()=> <Home title={this.state.home.title} subTitle={this.state.home.subTitle} text={this.state.home.text} />}/>\n          <Route path=\"/about\" render={()=> <About title={this.state.about.title}/>}/>\n          <Route path=\"/PortfolioMainPage\" render={()=> <PortfolioMain title={this.state.portfolioMainPage.title}/>}/>\n          <Route path=\"/achievements\" render={()=> <Achievements title={this.state.achievements.title}/>}/>\n          <Route path=\"/hobbies\" render={()=> <Hobbies title={this.state.hobbies.title}/>}/>\n          <Route path=\"/contact\" render={()=> <Contact title={this.state.contact.title}/>}/>\n          <Route path=\"/PortfolioPage\" render={()=> <Portfolio />}/>\n\n          <Footer />\n\n        </Container>\n      </Router>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
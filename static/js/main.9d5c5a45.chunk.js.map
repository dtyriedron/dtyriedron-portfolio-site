{"version":3,"sources":["assests/images/DylanGH.png","assests/images/DylanStrava.png","assests/images/linkedIn.jpeg","assests/images/android.svg","components/Footer.js","components/Hero.js","components/CardInfo.js","components/Card.js","components/Carousel.js","components/LoadContent.js","pages/HomePage.js","components/Content.js","pages/AboutPage.js","pages/ContactPage.js","components/GridLayout.js","pages/PortfolioMainPage.js","pages/PortfolioPage.js","pages/AchievementsPage.js","pages/HobbiesPage.js","pages/Achievement.js","pages/Hobby.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","Container","fluid","Row","Col","md","sm","Hero","props","title","subTitle","text","CardInfo","style","useSpring","opacity","from","div","href","link","target","rel","Card","onClick","e","click","item","src","imgSrc","alt","selected","Carousel","console","log","insta","handleCardClick","id","card","items","state","forEach","setState","makeitems","map","key","github","strava","linkedIn","this","React","Component","LoadContent","loading","error","data","urls","entries","value","fetch","then","res","json","catch","err","children","HomePage","Spinner","classname","animation","Content","AboutPage","ContactPage","handleChange","type","checked","name","handleSubmit","preventDefault","disabled","emailSent","email","message","Form","onSubmit","Group","Label","htmlFor","Control","onChange","as","rows","Button","variant","GridLayout","padding","Object","cards","i","pos","border","width","margin","Header","Body","Text","description","marginRight","document","location","process","page","handleClick","PortfolioMainPage","PortfolioPage","param","URL","window","searchParams","get","useState","setName","setDescription","language","setLanguage","useEffect","setData","array","languages","setLanguages","object","totalBytes","x","parseInt","percent","colors","position","center","bottom","lan","bytes","ProgressBar","Math","floor","random","length","label","toFixed","now","AchievementsPage","Achievements","HobbiesPage","Hobbies","Achievement","Hobby","App","headerLinks","path","home","about","portfolioMainPage","achievements","hobbies","contact","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","to","exact","render","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d5c5a45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DylanGH.8f6ed301.png\";","module.exports = __webpack_public_path__ + \"static/media/DylanStrava.0ec24b30.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedIn.19cc82b0.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/android.54170236.svg\";","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nfunction Footer(){\n    return(    \n        <footer className=\"mt-5\">\n            <Container fluid={true}>\n                <Row className=\"border-top justify-content-between p-3\">\n                    <Col className=\"p-0\" md={3} sm={12}>\n                        Dylan Tyrie-Dron\n                    </Col>\n                    <Col className=\"p-0 d-flex justify-content-end\" md={2.5}>\n                        This site was made by Dylan Tyrie-Dron.\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport { Container, Row } from 'react-bootstrap';\n\n\nfunction Hero(props){\n    return(\n        <Container fluid={true}>\n            <Row className=\"justify-content-center\">\n                { props.title && <h3 className=\"display-4 font-weight-bolder\">{props.title}</h3> }\n            </Row>\n            <Row className=\"justify-content-center\">\n                { props.subTitle && <h4 className=\"display-6 font-weight-light\">{props.subTitle}</h4> }\n            </Row>\n            <Row className=\"justify-content-center\">\n                { props.text && <h5 className=\"lead font-weight-light\">{props.text}</h5> }\n            </Row>\n        </Container>\n    );\n}\n\nexport default Hero;","import React from 'react';\nimport { useSpring, animated } from 'react-spring';\n\nfunction CardInfo(props){\n\n    const style = useSpring({opacity: 1, from: {opacity:0}});\n\n    return(\n        <animated.div className=\"dtd-card-info\" style={style}>\n            <p className=\"dtd-card-title\">{props.title}</p>\n            <p className=\"dtd-card-sub-title\">{props.subTitle}</p>\n            <a href={props.link} target=\"_blank\" rel=\"noopener noreferrer\">View</a>\n        </animated.div>\n    );\n}\n\nexport default CardInfo;","    import React from 'react';\n\nimport CardInfo from '../components/CardInfo';\n\nfunction Card(props){\n    return(\n        <div className=\"d-inline-block dtd-card hover\" onClick={(e) => props.click(props.item)} >\n            <img className=\"dtd-card-image\" src={props.item.imgSrc} alt={props.item.imgSrc}/>\n            { props.item.selected && <CardInfo title={props.item.title} subTitle={props.item.subTitle} link={props.item.link}/> }\n        </div>\n    );\n}\n\nexport default Card;","import React, { useState, useEffect } from 'react';\nimport { Container, Row} from 'react-bootstrap';\n\nimport Card from '../components/Card';\n\n\nimport github from '../assests/images/DylanGH.png';\nimport strava from '../assests/images/DylanStrava.png';\nimport linkedIn from '../assests/images/linkedIn.jpeg';\n\nclass Carousel extends React.Component{\n    constructor(props){\n        console.log(props.insta);\n    super(props);\n        this.state={\n            items:[\n                \n                {\n                    id:0,\n                    title: 'Instagram',\n                    subTitle: 'Photo and video sharing',\n                    imgSrc: props.insta[\"graphql\"][\"user\"][\"profile_pic_url_hd\"],\n                    link: 'https://www.instagram.com/doseofdylz/',\n                    selected: false\n                },\n                {\n                    id:1,\n                    title: 'GitHub',\n                    subTitle: 'Software storage and sharing',\n                    imgSrc: github,\n                    link: 'https://github.com/dtyriedron',\n                    selected: false\n                },\n                {\n                    id:2,\n                    title: 'Strava',\n                    subTitle: 'Track exercise and share with others',\n                    imgSrc: strava,\n                    link: 'https://www.strava.com/athletes/8795009',\n                    selected: false\n                },\n                {\n                    id:3,\n                    title: 'LinkedIn',\n                    subTitle: 'Connect your work and business',\n                    imgSrc: linkedIn,\n                    link: 'https://www.linkedin.com/in/dylan-tyrie-dron-041321184/',\n                    selected: false\n                }\n            ]\n        }\n    }\n    \n\n    handleCardClick = (id, card) => {\n        let items = [...this.state.items];\n\n        items[id].selected = items[id].selected ? false : true;\n\n        items.forEach(item => {\n            if(item.id !== id){\n                item.selected = false;\n            }\n        });\n\n        this.setState({\n            items\n        });\n    }\n\n    makeitems = (items) => {\n        return items.map(item => {\n            return <Card item={item} click={(e => this.handleCardClick(item.id, e))} key={item.id} />\n        })\n    }\n\n    render(){\n        return(\n            <Container fluid={true} >\n                <Row className=\"justify-content-center\">\n                    {this.makeitems(this.state.items)}\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Carousel;","import React, { useState } from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nclass LoadContent extends React.Component{\n    state = {\n        loading: true,\n        error: false,\n        data: []\n    };\n\n    componentDidMount(){\n        for (const [index, value] of this.props.urls.entries()) {\n            fetch(value)\n            .then(res => res.json())\n            .then((data) => this.setState({ data, loading: false }))\n            .catch((err) => {\n               this.setState({ data: value, loading: false})    \n            }\n            )\n        }\n    //     fetch(this.props.urls)\n    //   .then(res => res.json())\n    //   .then((data) => this.setState({ data, loading: false }))\n    //   .catch((err) => this.setState({ loading: false, error: true }))\n    }\n\n    render(){\n        return(\n            <div>\n                {\n                    this.props.children({\n                        ...this.props,\n                        ...this.state,\n                    })\n                }\n            </div>\n        );\n    }\n}\n\nexport default LoadContent;","import React, { useState, useLayoutEffect } from 'react';\n\nimport Hero from '../components/Hero';\nimport Carousel from '../components/Carousel';\nimport {Container, Row, Spinner} from 'react-bootstrap';\nimport LoadContent from '../components/LoadContent.js';\n// import Config from '../config.js';\n\nfunction HomePage(props){\n    return(\n        <div>\n            <LoadContent urls={[\n                \"https://www.instagram.com/doseofdylz/?__a=1\",\n            ]}>\n            {\n            ({ loading, error, data }) => {\n\n                if (loading) return (\n                    <div>\n                        <Hero title={props.title} subTitle={props.subTitle} text={props.text}/>\n                        <Container fluid={true}>\n                            <Row className=\"justify-content-center\">\n                                <Spinner classname=\"justify-content-center\" animation=\"border\"/>\n                            </Row>\n                        </Container>\n                    </div>\n                );\n                if (error) return <span>Error loading</span>\n\n                return(\n                    <div>  \n                        <Hero title={props.title} subTitle={props.subTitle} text={props.text}/>                      \n                        <Carousel insta={data} />\n                    </div>\n                );\n            }\n            }\n            </LoadContent>\n        </div>\n    );\n        \n}\nexport default HomePage;","import React from 'react';\nimport { Container, Row, Col} from 'react-bootstrap';\n\nfunction Content(props){\n    return(\n        <Container fluid={true}>\n            <Row className=\"justify-content-center\">\n                <Col md={8}>\n                    {props.children}\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Content;","import React from 'react';\n\nimport Hero from '../components/Hero';\nimport Content from '../components/Content';\n\nfunction AboutPage(props){\n    return(\n        <div>\n            <Hero title={props.title}/>\n\n            <Content>\n                <p>Hello, my name is Dylan. I am a full stack software engineer with experience in Java, Android, C++, C#, Arduino, HTML, ReactJS, Ada, C, CSS, JavaScript, Python and Haskell.</p>\n            </Content>\n        </div>\n    );\n}\nexport default AboutPage;","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nimport Hero from '../components/Hero';\nimport Content from '../components/Content';\n\n\nclass ContactPage extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            email: '',\n            message: '',\n            disabled: false,\n            emailSent: null,\n        }\n    }\n\n    handleChange = (e) => {\n\n        const target = e.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name] : value\n        });\n\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            // disabled: true\n            \n            disabled: false,\n            emailSent: false\n                \n        });\n\n        // Axios.post('http://localhost:3030/api/email', this.state)\n        //     .then(res => {\n        //         if(res.data.success){\n        //             this.setState({\n        //                 disabled: false,\n        //                 emailSent: true\n        //             }); \n        //         } else{\n        //             this.setState({\n        //                 disabled: false,\n        //                 emailSent: false\n        //             }); \n        //         }\n        //     })\n        //     .catch(err => {\n        //         this.setState({\n        //             disabled: false,\n        //             emailSent: false\n        //         })\n        //     });\n    }\n\n    render(){\n        return(\n            <div>\n                <Hero title={this.props.title} />\n\n                <Content>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group>\n                            <Form.Label htmlFor=\"full-name\">Full Name</Form.Label>\n                            <Form.Control id=\"full-name\" name= \"name\" type=\"text\" value={this.state.name} onChange={this.handleChange}></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label htmlFor=\"email\">Email</Form.Label>\n                            <Form.Control id=\"email\" name= \"email\" type=\"email\" value={this.state.email} onChange={this.handleChange}></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label htmlFor=\"message\">Message</Form.Label>\n                            <Form.Control id=\"message\" name= \"message\" as=\"textarea\" rows=\"3\" value={this.state.message} onChange={this.handleChange}></Form.Control>\n                        </Form.Group>\n\n                        <Button className=\"d-inline-block\" variant=\"primary\" type=\"sumbit\" disabled={this.state.disabled}>\n                            Send\n                        </Button>\n\n\n                        {this.state.emailSent === true && <p className=\"d-inline success-msg\">Email sent</p>}\n                        {this.state.emailSent === false && <p className=\"d-inline err-msg\">Email not sent</p>}\n                    </Form>\n                </Content>\n\n            </div>\n\n            \n        );\n    }\n}\nexport default ContactPage;","import React from 'react';\nimport { Row, Card, Button, Container} from 'react-bootstrap';\n\nfunction GridLayout(props){\n\n    function handleClick(pos) {     \n        const home = process.env.PUBLIC_URL + '';\n        document.location = `${home}/${props.page}/?pos=${pos}`;\n    }\n\n    return(\n        <div>\n            <Container fluid={true} style={{padding: '1rem'}}>\n                <Row md={12} className=\"justify-content-center\">  \n                {\n                    Object.entries(props.cards).map(([pos, card], i) => {\n                        return (         \n                            // <Col> \n                            <Card border=\"primary\" key={i} style={{width: '15rem', margin: '1rem'}}>\n                                <Card.Header key={i} style={{width: '100%'}}>{card.name}                                            \n                                </Card.Header>\n                                <Card.Body key={i}>\n                                    {\n                                        // Object.entries(language).map((lan, i) =>{\n                                        //     // console.log(language[lan])\n                                        //     return(\n                                        //         <Card.Img key={i} style={{width:'25%'}} variant=\"top\" src={Android}/>\n                                        //     );\n                                        // })\n                                    }                                            \n                                    <Card.Text key={i}>\n                                        {card.description}\n                                    </Card.Text>                                            \n                                </Card.Body>\n                                <Card.Footer>\n                                <Button key={i} style={{width:'70%', marginRight:'5%'}} onClick={()=> handleClick(pos)} variant=\"primary\">{props.page}\n                                    </Button>\n                                </Card.Footer>\n                            </Card>\n                        )\n                    })\n                }\n\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default GridLayout;","import React, { useState, useEffect} from 'react';\nimport { Container, Row, Spinner } from 'react-bootstrap';\nimport Hero from '../components/Hero';\nimport GridLayout from '../components/GridLayout';\nimport LoadContent from '../components/LoadContent';\n\nimport Android from '../assests/images/android.svg';\n\nfunction PortfolioMainPage(props){\n    return(\n        <div>\n          <LoadContent urls={[\n                \"https://api.github.com/users/dtyriedron/repos\",\n            ]}>\n            {\n            ({ loading, error, data }) => {\n                console.log(data);\n\n                if (loading) return (\n                    <div>\n                        <Hero title={props.title} subTitle={props.subTitle} text={props.text}/>\n                        <Container fluid={true}>\n                            <Row className=\"justify-content-center\">\n                                <Spinner classname=\"justify-content-center\" animation=\"border\"/>\n                            </Row>\n                        </Container>\n                    </div>\n                );\n                if (error) return <span>Error loading</span>\n\n                return(\n                    <div>\n                        <Hero title={props.title}/>\n                        <GridLayout page=\"PortfolioPage\" cards={data}/>\n                    </div>\n                );\n            }\n            }\n            </LoadContent>\n            \n        </div>\n    );\n    \n}\n\nexport default PortfolioMainPage;","import React, { useState, useEffect } from 'react';\nimport Content from '../components/Content';\nimport Hero from '../components/Hero';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport { Col , Button, Row} from 'react-bootstrap';\n\nfunction PortfolioPage(){\n    var url = new URL(window.location.href);\n    var param = url.searchParams.get(\"pos\");\n\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [language, setLanguage] = useState('');\n\n    useEffect(() => {\n        fetch('https://api.github.com/users/dtyriedron/repos')\n        .then(res => res.json())\n        .then(data => {\n            setData(data);     \n        });\n\n    }, []);\n\n    const setData = (\n        array,\n    ) => {\n        console.log(array)\n        setName(array[param].name);\n        setDescription(array[param].description);\n        fetch(`https://api.github.com/repos/dtyriedron/${array[param].name}/languages`)\n        .then(res => res.json())\n        .then(languages => {\n            setLanguages(languages);     \n        });\n    };\n\n    const setLanguages = (\n        object,\n    ) => {\n        console.log(object)\n        var obj = object;\n        setLanguage(obj);\n    };\n\n    var totalBytes =0;\n    for(var x in language){\n        totalBytes+=parseInt(language[x])\n    }\n    console.log(totalBytes);\n    var percent=0;\n\n    var colors = [\"success\", \"info\", \"warning\", \"danger\"];\n\n    return(\n        <div>\n            <Hero title={name}/>\n            <Content>\n            <Row>\n                <Col md={10}>\n                    <p>\n                        {description} \n                    </p>\n                </Col>\n                <Col md={2}>\n                    <Button href= {`https://github.com/dtyriedron/${name}`} target=\"_blank\" style={{position: 'absolute', center:0, bottom:0}} variant=\"success\">Github</Button>{' '}\n                </Col>\n            </Row>\n                \n            </Content>\n            <Content>\n                <div style={{border: \".2rem solid #ececec\", padding: \"1rem\"}}>\n                    <p>\n                        Code coverage:\n                    </p>\n                    <style type=\"text/css\">\n                        {`\n                        .progress-bar {\n                        color: black;\n                        }\n                        `}\n                    </style>\n                    \n                    {\n                        \n                        Object.entries(language).map(([lan, bytes], i) => {\n                            console.log(bytes);\n                            percent = (parseInt(bytes)/totalBytes)*100;\n                                return (                                                            \n                                    <ProgressBar key={i} variant={colors[Math.floor(Math.random() * colors.length)]} label={lan +` ${percent.toFixed(2)}%`} now={percent}/>                                    \n                                )\n                        })\n                    }\n                </div>\n\n            </Content>\n        </div>\n    );\n}\nexport default PortfolioPage;","import React from 'react';\nimport Hero from '../components/Hero';\nimport GridLayout from '../components/GridLayout';\nimport LoadContent from '../components/LoadContent';\nimport { Container, Row, Spinner } from 'react-bootstrap';\n\nimport Achievements from '../assests/data/Achievements.json';\n\n\nfunction AchievementsPage(props){\n    return(\n        <div>\n                <LoadContent urls={[\n                Achievements,\n            ]}>\n            {\n                ({ loading, error, data }) => {\n\n                    if (loading) return (\n                        <div>\n                            <Hero title={props.title} />\n                            <Container fluid={true}>\n                                <Row className=\"justify-content-center\">\n                                    <Spinner classname=\"justify-content-center\" animation=\"border\"/>\n                                </Row>\n                            </Container>\n                        </div>\n                    );\n                    if (error) return <span>Error loading</span>\n                    return(\n                        <div>\n                            <Hero title={props.title} />\n                            <GridLayout page=\"Achievement\" cards={data}/>\n                        </div>\n                    );\n                }   \n            }   \n            </LoadContent>\n        </div>\n    );\n}\nexport default AchievementsPage;","import React, { useState} from 'react';\nimport { useSpring, animated as a } from 'react-spring';\nimport Hero from '../components/Hero';\nimport { Container, Row, Spinner } from 'react-bootstrap';\nimport GridLayout from '../components/GridLayout';\nimport LoadContent from '../components/LoadContent';\n\nimport Hobbies from '../assests/data/Hobbies.json';\n\nfunction HobbiesPage(props){\n    return(\n        <div>\n                <LoadContent urls={[\n                Hobbies,\n            ]}>\n            {\n                ({ loading, error, data }) => {\n\n                    if (loading) return (\n                        <div>\n                            <Hero title={props.title} />\n                            <Container fluid={true}>\n                                <Row className=\"justify-content-center\">\n                                    <Spinner classname=\"justify-content-center\" animation=\"border\"/>\n                                </Row>\n                            </Container>\n                        </div>\n                    );\n                    if (error) return <span>Error loading</span>\n                    return(\n                        <div>\n                            <Hero title={props.title} />\n                            <GridLayout page=\"Hobby\" cards={data}/>\n                        </div>\n                    );\n                }   \n            }   \n            </LoadContent>\n        </div>\n    );\n}\nexport default HobbiesPage;","import React from 'react';\nimport Hero from '../components/Hero';\n\nimport data from '../assests/data/Achievements.json';\n\nfunction Achievement(){\n    var url = new URL(window.location.href);\n    var param = url.searchParams.get(\"pos\");\n    console.log(data[param].name);\n    return(\n        <div>\n            <Hero title={data[param].name} text={data[param].description}/>\n        </div>\n    );\n}\nexport default Achievement;","import React from 'react';\nimport Hero from '../components/Hero';\n\nimport data from '../assests/data/Hobbies.json';\n\nfunction Hobby(){\n    var url = new URL(window.location.href);\n    var param = url.searchParams.get(\"pos\");\n    console.log(data[param].name);\n    return(\n        <div>\n            <Hero title={data[param].name} text={data[param].description}/>\n        </div>\n    );\n}\nexport default Hobby;","import React, {useEffect} from 'react';\nimport {BrowserRouter, Route, Link} from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport './App.css';\n\nimport Footer from './components/Footer';\nimport Home from './pages/HomePage';\nimport About from './pages/AboutPage';\nimport Contact from './pages/ContactPage';\nimport PortfolioMain from './pages/PortfolioMainPage';\nimport Portfolio from './pages/PortfolioPage';\nimport Achievements from './pages/AchievementsPage';\nimport Hobbies from './pages/HobbiesPage';\nimport Achievement from './pages/Achievement';\nimport Hobby from './pages/Hobby';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      title: 'Dylan Tyrie-Dron',\n      headerLinks: [\n        {title: 'Home', path:'/'},\n        {title: 'About', path:'/about'},\n        {title: 'Contact', path:'/contact'}\n      ],\n      home: {\n        title: 'Dylan Tyrie-Dron',\n        subTitle: 'Graduate Software Engineer',\n      },\n      about: {\n        title: 'About me',\n      },\n      portfolioMainPage: {\n        title: 'My Projects!',\n      },\n      achievements:{\n        title: 'My Achievements!',\n      },\n      hobbies:{\n        title: 'My Interests!',\n      },\n      contact: {\n        title: 'Get in touch with me',\n      },\n      \n      \n    }\n  }\n  \n  render(){\n    return (\n              <BrowserRouter >\n                <Container className=\"p-0\" fluid={true}>\n\n                  <Navbar className=\"border-bottom\" bg=\"transparent\" expand=\"lg\">\n                    <Navbar.Brand>Dylan Tyrie-Dron</Navbar.Brand>\n\n                    <Navbar.Toggle className=\"border-0\" aria-controls=\"navbar-toggle\" />\n                    <Navbar.Collapse id=\"navbar-toggle\">\n                      <Nav className=\"ml-auto\">\n                        <Link className=\"nav-link\" to={process.env.PUBLIC_URL + '/'}>Home</Link>\n                        <Link className=\"nav-link\" to={process.env.PUBLIC_URL + '/about'}>About</Link>\n                        <Link className=\"nav-link\" to={process.env.PUBLIC_URL + '/PortfolioMainPage'}>Portfolio</Link>\n                        <Link className=\"nav-link\" to={process.env.PUBLIC_URL + '/achievements'}>Achievements</Link>\n                        <Link className=\"nav-link\" to={process.env.PUBLIC_URL + '/hobbies'}>Hobbies</Link>\n                        <Link className=\"nav-link\" to={process.env.PUBLIC_URL + '/contact'}>Contact</Link>\n\n                      </Nav>\n                    </Navbar.Collapse>\n                    \n\n                  </Navbar>\n\n                  <Route exact path={process.env.PUBLIC_URL + '/'} render={()=> <Home title={this.state.home.title} subTitle={this.state.home.subTitle} text={this.state.home.text} />}/>\n                  <Route path={process.env.PUBLIC_URL + '/about'} render={()=> <About title={this.state.about.title}/>}/>\n                  <Route path={process.env.PUBLIC_URL + '/PortfolioMainPage'} render={()=> <PortfolioMain title={this.state.portfolioMainPage.title}/>}/>\n                  <Route path={process.env.PUBLIC_URL + '/achievements'} render={()=> <Achievements title={this.state.achievements.title}/>}/>\n                  <Route path={process.env.PUBLIC_URL + '/hobbies'} render={()=> <Hobbies title={this.state.hobbies.title}/>}/>\n                  <Route path={process.env.PUBLIC_URL + '/contact'} render={()=> <Contact title={this.state.contact.title}/>}/>\n                  <Route path={process.env.PUBLIC_URL + '/PortfolioPage'} render={()=> <Portfolio />}/>\n                  <Route path={process.env.PUBLIC_URL + '/Achievement'} render={() => <Achievement/>}/>\n                  <Route path={process.env.PUBLIC_URL + '/Hobby'} render={() => <Hobby/>}/>\n\n                  <Footer />\n\n                </Container>\n              </BrowserRouter>\n            \n\n          \n        \n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}